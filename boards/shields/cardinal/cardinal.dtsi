

#include <dt-bindings/zmk/matrix_transform.h>
#include "cardinal_layouts.dtsi"

/ {

	chosen {
        zephyr,display = &oled;
		//zmk,kscan = &kscan_6_column;
		//zmk,matrix_transform = &default_transform;
        zmk,physical-layout = &layout_6_column;
	};

    // OG 6 Column keymap transform.
	default_transform_6c: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <12>;
		rows = <5>;

        // --------------------------------------------------------------------------------------------------------------------------------------------------------------------
        // Example layout from the schematic, we start at -1 column up to 5, with the posibility to remove the -1 column
        // then we have 3 main rows, 1 row dedicated for the thumb and 1 row for the 5 way. This is almost a perfect matrix and we could in theory get 2 extra switches from the matrix
        // In the opt spaces can be either the 5 way switch or a rotary encoder EWQDG from panasonic, with native support for 2 encoders or 1 encoder + 5 way switch, or you could handwire it #yolo
        // We map the 5 way switch in a funky way, because i can
        //         -1         1        2         3         4         5
        //1   |   ESC   |    Q    |    W    |    E    |    R    |    T    |                       |    Y    |    U    |    I    |    O    |    P    |    \    |
        //2   |   TAB   |    A    |    S    |    D    |    F    |    G    |                       |    H    |    J    |    K    |    L    |    ;    |    '    |
        //3   |  SHIFT  |    Z    |    X    |    C    |    V    |    B    |  (opt)  |   |  (opt)  |    N    |    M    |    ,    |    .    |    /    |  R CTRL |
        //T                                 |  (opt)  |    ALT  | RETURN  |  SPACE  |   |   TAB   |   BSPC  |   WIN   |  (opt)  |
        //5 (5 way)

		map = <
		    RC(0,0)  RC(0,1)  RC(0,2)  RC(0,3)  RC(0,4)  RC(0,5)                     RC(0,6)  RC(0,7)  RC(0,8)  RC(0,9)  RC(0,10) RC(0,11)
		    RC(1,0)  RC(1,1)  RC(1,2)  RC(1,3)  RC(1,4)  RC(1,5)                     RC(1,6)  RC(1,7)  RC(1,8)  RC(1,9)  RC(1,10) RC(1,11)
		    RC(2,0)  RC(2,1)  RC(2,2)  RC(2,3)  RC(2,4)  RC(2,5)  RC(3,4)  RC(3,7)   RC(2,6)  RC(2,7)  RC(2,8)  RC(2,9)  RC(2,10) RC(2,11)
		                               RC(3,3)  RC(3,1)  RC(3,2)  RC(3,0)  RC(3,11)  RC(3,9)  RC(3,10) RC(3,8)
                              RC(4,1)                                                                           RC(4,10)
                     RC(4,3)  RC(4,5)  RC(4,4)                                                         RC(4,8)  RC(4,6)  RC(4,7)               
                              RC(4,2)                                                                           RC(4,9)
		>;
	};

    // 5 Column keymap transform.
	default_transform_5c: keymap_transform_1 {
		compatible = "zmk,matrix-transform";
		columns = <12>;
		rows = <5>;

        // --------------------------------------------------------------------------------------------------------------------------------------------------------------------
        // This could be different, if not becuase im using the -1 row in the thumb cluster, probably because i thougth of snapping one of the thumb keys too
        // not a big deal, but i could have 1 extra free prin. this configuration is "redundant", but gonna leave.

		map = <
		             RC(0,1)  RC(0,2)  RC(0,3)  RC(0,4)  RC(0,5)                     RC(0,6)  RC(0,7)  RC(0,8)  RC(0,9)  RC(0,10)
		             RC(1,1)  RC(1,2)  RC(1,3)  RC(1,4)  RC(1,5)                     RC(1,6)  RC(1,7)  RC(1,8)  RC(1,9)  RC(1,10)
		             RC(2,1)  RC(2,2)  RC(2,3)  RC(2,4)  RC(2,5)  RC(3,4)  RC(3,7)   RC(2,6)  RC(2,7)  RC(2,8)  RC(2,9)  RC(2,10)
		                               RC(3,3)  RC(3,1)  RC(3,2)  RC(3,0)  RC(3,11)  RC(3,9)  RC(3,10) RC(3,8)
                              RC(4,1)                                                                           RC(4,10)
                     RC(4,3)  RC(4,5)  RC(4,4)                                                         RC(4,8)  RC(4,6)  RC(4,7)               
                              RC(4,2)                                                                           RC(4,9)
		>;
	};

	kscan_6_column: kscan_0 {
		compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";
		row-gpios
		    = <&pro_micro 3  (GPIO_ACTIVE_HIGH  | GPIO_PULL_DOWN)> 
		    , <&pro_micro 4  (GPIO_ACTIVE_HIGH  | GPIO_PULL_DOWN)>
            , <&pro_micro 5  (GPIO_ACTIVE_HIGH  | GPIO_PULL_DOWN)>
            , <&pro_micro 10 (GPIO_ACTIVE_HIGH  | GPIO_PULL_DOWN)>
            , <&pro_micro 16 (GPIO_ACTIVE_HIGH  | GPIO_PULL_DOWN)> //row for 5 way
		    ;
	};
    // Kscan for the 5 column version, here is the same, on each half not.
    kscan_5_column: kscan_1 {
		compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";
		row-gpios
		    = <&pro_micro 3  (GPIO_ACTIVE_HIGH  | GPIO_PULL_DOWN)> 
		    , <&pro_micro 4  (GPIO_ACTIVE_HIGH  | GPIO_PULL_DOWN)>
            , <&pro_micro 5  (GPIO_ACTIVE_HIGH  | GPIO_PULL_DOWN)>
            , <&pro_micro 10 (GPIO_ACTIVE_HIGH  | GPIO_PULL_DOWN)>
            , <&pro_micro 16 (GPIO_ACTIVE_HIGH  | GPIO_PULL_DOWN)> //row for 5 way
		    ;
	};

	encoder_left_h: left_encoder_h {
        compatible = "alps,ec11";
        a-gpios = <&pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled";
    };

    encoder_left_v: left_encoder_v {
        compatible = "alps,ec11";
        a-gpios = <&pro_micro 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled";
    };

    encoder_right_h: right_encoder_h {
        compatible = "alps,ec11";
        a-gpios = <&pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled";
    };

    encoder_right_v: right_encoder_v {
        compatible = "alps,ec11";
        a-gpios = <&pro_micro 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled";
    };

	sensors {
        compatible = "zmk,keymap-sensors";
        sensors = < &encoder_left_h 
                    &encoder_left_v 
                    &encoder_right_h 
                    &encoder_right_v>;
        triggers-per-rotation = <20>;
    };

};

&pinctrl {

    i2c0_default: i2c0_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 8)>,
                    <NRF_PSEL(TWIM_SCL, 0, 17)>;
        };
    };
    i2c0_sleep: i2c0_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 8)>,
                    <NRF_PSEL(TWIM_SCL, 0, 17)>;
            low-power-enable;
            };
       };

    spi1_default: spi1_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 17)>,
                    <NRF_PSEL(SPIM_MOSI, 0, 8)>,
                    <NRF_PSEL(SPIM_MISO, 0, 25)>;
        };
    };
    spi1_sleep: spi1_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 17)>,
                    <NRF_PSEL(SPIM_MOSI, 0, 8)>,
                    <NRF_PSEL(SPIM_MISO, 0, 25)>;
            low-power-enable;
        };
    };
};

&pro_micro_i2c {
    status="okay";
    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        width = <128>;
        height = <64>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <63>;//31
        inversion-on;
        //segment-remap;
        //com-invdir;
        //com-sequential;
        prechargep = <0x22>;
    };
};


nice_view_spi: &spi1 {
    status = "disabled";

    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi1_default>;
    pinctrl-1 = <&spi1_sleep>;
    pinctrl-names = "default", "sleep";
    cs-gpios = <&pro_micro 1 GPIO_ACTIVE_HIGH>;
};
