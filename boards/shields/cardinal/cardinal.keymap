#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// This is a base keymap intended for the keyboard to "just work" oftb, with nothing fancy and most keys available, based on
// corne default layout and adding encoders and 5-way switches, on all layers they work as volume up/down and mute and as a joystick with the center being space
// this is not efficient but should be used as a starting point for your own keymap.
// If you are considering the use of ZMK Studio you will need to add the &studio_unlock somewere in your layout.

/ {
    keymap {

        compatible = "zmk,keymap";
        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |                 |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |                 |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  | MUTE |   | MUTE |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                     MUTE | GUI | LWR | SPC  |   |  ENT | RSE | ALT  | MUTE
            bindings = <
                &kp TAB   &kp Q &kp W &kp E      &kp R    &kp T                       &kp Y &kp U    &kp I      &kp O   &kp P    &kp BSPC
                &kp LCTRL &kp A &kp S &kp D      &kp F    &kp G                       &kp H &kp J    &kp K      &kp L   &kp SEMI &kp SQT
                &kp LSHFT &kp Z &kp X &kp C      &kp V    &kp B &kp C_MUTE &kp C_MUTE &kp N &kp M    &kp COMMA  &kp DOT &kp FSLH &kp ESC
                                      &kp C_MUTE &kp LGUI &mo 1 &kp SPACE  &kp RET    &mo 2 &kp RALT &kp C_MUTE
                                      &kp UP                                                         &kp UP
                             &kp LEFT &sk LGUI  &kp RIGHT                                  &kp LEFT  &kp SPACE  &kp RIGHT
                                      &kp DOWN                                                       &kp DOWN
            >;
            sensor-bindings = < 
                &inc_dec_kp C_VOL_UP C_VOL_DN 
                &inc_dec_kp C_VOL_UP C_VOL_DN
                &inc_dec_kp C_VOL_UP C_VOL_DN 
                &inc_dec_kp C_VOL_UP C_VOL_DN
                        
             >;
        };
        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |                 |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |                 | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     | MUTE |   | MUTE |     |     |     |     |     |      |
            //                     MUTE | GUI |     | SPC  |   |  ENT |     | ALT | MUTE
            bindings = <
                &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5                             &kp N6   &kp N7   &kp N8     &kp N9    &kp N0 &kp BSPC
                &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                       &kp LEFT &kp DOWN &kp UP     &kp RIGHT &trans &trans
                &kp LSHFT  &trans       &trans       &trans       &trans       &trans       &kp C_MUTE &kp C_MUTE &trans   &trans   &trans     &trans    &trans &trans
                                                     &kp C_MUTE   &kp LGUI     &trans       &kp SPACE  &kp RET    &trans   &kp RALT &kp C_MUTE
                                                     &kp UP                                                                         &kp UP
                                            &kp LEFT &sk LGUI  &kp RIGHT                                                  &kp LEFT  &kp SPACE  &kp RIGHT
                                                     &kp DOWN                                                                       &kp DOWN

            >;
            sensor-bindings = < 
                &inc_dec_kp C_VOL_UP C_VOL_DN 
                &inc_dec_kp C_VOL_UP C_VOL_DN
                &inc_dec_kp C_VOL_UP C_VOL_DN 
                &inc_dec_kp C_VOL_UP C_VOL_DN
                        
             >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |                 |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |                 |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     | MUTE |   | MUTE |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                     MUTE | GUI |     | SPC |     | ENT |     | ALT | MUTE
            bindings = <
                &kp  TAB  &kp EXCL &kp AT &kp HASH   &kp DLLR &kp PRCNT                         &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
                &kp LCTRL &trans   &trans &trans     &trans   &trans                            &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
                &kp LSHFT &trans   &trans &trans     &trans   &trans    &kp C_MUTE  &kp C_MUTE  &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                                          &kp C_MUTE &kp LGUI &trans    &kp SPACE   &kp RET     &trans    &kp RALT  &kp C_MUTE
                                          &kp UP                                                                    &kp UP
                                 &kp LEFT &sk LGUI  &kp RIGHT                                             &kp LEFT  &kp SPACE  &kp RIGHT
                                          &kp DOWN                                                                  &kp DOWN

            >;
            sensor-bindings = < 
                &inc_dec_kp C_VOL_UP C_VOL_DN 
                &inc_dec_kp C_VOL_UP C_VOL_DN
                &inc_dec_kp C_VOL_UP C_VOL_DN 
                &inc_dec_kp C_VOL_UP C_VOL_DN
                        
             >;
        };
    };
};




                                              